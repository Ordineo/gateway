server:
  port: ${PORT:9900}
debug: true
#spring:
#   redis:
#       host: pub-redis-10962.us-east-1-2.5.ec2.garantiadata.com
#       database: 0
#       port: 10962
#       password: r1b098ipgrR9jJ7t
#  aop:
#    proxy-target-class: true
jwt:
  header: Authorization
  secret: 360t00l
  expiration: 604800
  route:
    authentication:
      path: auth
      refresh: refresh

---
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone:  https://eureka-ordineo.cfapps.io/eureka/ #http://localhost:8761/eureka/
  instance:
    secure-port-enabled: true
    secure-port: ${server.port}
    non-secure-port-enabled: false
ribbon:
  IsSecure: true
---
zuul:
  routes:
    milestone-ordineo:
      path: /milestone-ordineo/**
      serviceId: milestone-ordineo
      stripPrefix: false
      sensitive-headers:
    employee-ordineo:
      path: /employee-ordineo/**
      serviceId: employee-ordineo
      stripPrefix: false
      sensitive-headers:
  ignored-services: "*"
logging:
  level:
    org.springframework.security: INFO
spring:
  profiles: cloud
server:
  port: ${PORT}
eureka:
  instance:
    hostname: ${vcap.application.uris[0]}
    nonSecurePort: 80
    nonSecurePortEnabled: false
    securePortEnabled: true
    metadataMap:
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    serviceUrl:
      defaultZone: ${vcap.services.registry.credentials.url}
    healthcheck:
      enabled: true